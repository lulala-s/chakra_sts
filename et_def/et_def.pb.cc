// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: et_def.proto

#include "et_def.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_et_5fdef_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoolList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BytesList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Fixed32List;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Fixed64List;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FloatList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IOInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int32List;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64List;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Sfixed32List;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Sfixed64List;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Sint32List;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Sint64List;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Uint32List;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Uint64List;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_et_5fdef_2eproto ::google::protobuf::internal::SCCInfo<15> scc_info_AttributeProto;
}  // namespace protobuf_et_5fdef_2eproto
namespace ChakraProtoMsg {
class AttributeProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttributeProto>
      _instance;
  double double_val_;
  const ::ChakraProtoMsg::DoubleList* double_list_;
  float float_val_;
  const ::ChakraProtoMsg::FloatList* float_list_;
  ::google::protobuf::int32 int32_val_;
  const ::ChakraProtoMsg::Int32List* int32_list_;
  ::google::protobuf::int64 int64_val_;
  const ::ChakraProtoMsg::Int64List* int64_list_;
  ::google::protobuf::uint32 uint32_val_;
  const ::ChakraProtoMsg::Uint32List* uint32_list_;
  ::google::protobuf::uint64 uint64_val_;
  const ::ChakraProtoMsg::Uint64List* uint64_list_;
  ::google::protobuf::int32 sint32_val_;
  const ::ChakraProtoMsg::Sint32List* sint32_list_;
  ::google::protobuf::int64 sint64_val_;
  const ::ChakraProtoMsg::Sint64List* sint64_list_;
  ::google::protobuf::uint32 fixed32_val_;
  const ::ChakraProtoMsg::Fixed32List* fixed32_list_;
  ::google::protobuf::uint64 fixed64_val_;
  const ::ChakraProtoMsg::Fixed64List* fixed64_list_;
  ::google::protobuf::int32 sfixed32_val_;
  const ::ChakraProtoMsg::Sfixed32List* sfixed32_list_;
  ::google::protobuf::int64 sfixed64_val_;
  const ::ChakraProtoMsg::Sfixed64List* sfixed64_list_;
  bool bool_val_;
  const ::ChakraProtoMsg::BoolList* bool_list_;
  ::google::protobuf::internal::ArenaStringPtr string_val_;
  const ::ChakraProtoMsg::StringList* string_list_;
  ::google::protobuf::internal::ArenaStringPtr bytes_val_;
  const ::ChakraProtoMsg::BytesList* bytes_list_;
} _AttributeProto_default_instance_;
class DoubleListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DoubleList>
      _instance;
} _DoubleList_default_instance_;
class FloatListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FloatList>
      _instance;
} _FloatList_default_instance_;
class Int32ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Int32List>
      _instance;
} _Int32List_default_instance_;
class Int64ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Int64List>
      _instance;
} _Int64List_default_instance_;
class Uint32ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Uint32List>
      _instance;
} _Uint32List_default_instance_;
class Uint64ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Uint64List>
      _instance;
} _Uint64List_default_instance_;
class Sint32ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Sint32List>
      _instance;
} _Sint32List_default_instance_;
class Sint64ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Sint64List>
      _instance;
} _Sint64List_default_instance_;
class Fixed32ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Fixed32List>
      _instance;
} _Fixed32List_default_instance_;
class Fixed64ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Fixed64List>
      _instance;
} _Fixed64List_default_instance_;
class Sfixed32ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Sfixed32List>
      _instance;
} _Sfixed32List_default_instance_;
class Sfixed64ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Sfixed64List>
      _instance;
} _Sfixed64List_default_instance_;
class BoolListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BoolList>
      _instance;
} _BoolList_default_instance_;
class StringListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringList>
      _instance;
} _StringList_default_instance_;
class BytesListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytesList>
      _instance;
} _BytesList_default_instance_;
class GlobalMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GlobalMetadata>
      _instance;
} _GlobalMetadata_default_instance_;
class NodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Node>
      _instance;
} _Node_default_instance_;
class IOInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IOInfo>
      _instance;
} _IOInfo_default_instance_;
class TensorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tensor>
      _instance;
} _Tensor_default_instance_;
}  // namespace ChakraProtoMsg
namespace protobuf_et_5fdef_2eproto {
static void InitDefaultsAttributeProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_AttributeProto_default_instance_;
    new (ptr) ::ChakraProtoMsg::AttributeProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::AttributeProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<15> scc_info_AttributeProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 15, InitDefaultsAttributeProto}, {
      &protobuf_et_5fdef_2eproto::scc_info_DoubleList.base,
      &protobuf_et_5fdef_2eproto::scc_info_FloatList.base,
      &protobuf_et_5fdef_2eproto::scc_info_Int32List.base,
      &protobuf_et_5fdef_2eproto::scc_info_Int64List.base,
      &protobuf_et_5fdef_2eproto::scc_info_Uint32List.base,
      &protobuf_et_5fdef_2eproto::scc_info_Uint64List.base,
      &protobuf_et_5fdef_2eproto::scc_info_Sint32List.base,
      &protobuf_et_5fdef_2eproto::scc_info_Sint64List.base,
      &protobuf_et_5fdef_2eproto::scc_info_Fixed32List.base,
      &protobuf_et_5fdef_2eproto::scc_info_Fixed64List.base,
      &protobuf_et_5fdef_2eproto::scc_info_Sfixed32List.base,
      &protobuf_et_5fdef_2eproto::scc_info_Sfixed64List.base,
      &protobuf_et_5fdef_2eproto::scc_info_BoolList.base,
      &protobuf_et_5fdef_2eproto::scc_info_StringList.base,
      &protobuf_et_5fdef_2eproto::scc_info_BytesList.base,}};

static void InitDefaultsDoubleList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_DoubleList_default_instance_;
    new (ptr) ::ChakraProtoMsg::DoubleList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::DoubleList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DoubleList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDoubleList}, {}};

static void InitDefaultsFloatList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_FloatList_default_instance_;
    new (ptr) ::ChakraProtoMsg::FloatList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::FloatList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FloatList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFloatList}, {}};

static void InitDefaultsInt32List() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_Int32List_default_instance_;
    new (ptr) ::ChakraProtoMsg::Int32List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::Int32List::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Int32List =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInt32List}, {}};

static void InitDefaultsInt64List() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_Int64List_default_instance_;
    new (ptr) ::ChakraProtoMsg::Int64List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::Int64List::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Int64List =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInt64List}, {}};

static void InitDefaultsUint32List() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_Uint32List_default_instance_;
    new (ptr) ::ChakraProtoMsg::Uint32List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::Uint32List::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Uint32List =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUint32List}, {}};

static void InitDefaultsUint64List() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_Uint64List_default_instance_;
    new (ptr) ::ChakraProtoMsg::Uint64List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::Uint64List::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Uint64List =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUint64List}, {}};

static void InitDefaultsSint32List() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_Sint32List_default_instance_;
    new (ptr) ::ChakraProtoMsg::Sint32List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::Sint32List::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Sint32List =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSint32List}, {}};

static void InitDefaultsSint64List() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_Sint64List_default_instance_;
    new (ptr) ::ChakraProtoMsg::Sint64List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::Sint64List::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Sint64List =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSint64List}, {}};

static void InitDefaultsFixed32List() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_Fixed32List_default_instance_;
    new (ptr) ::ChakraProtoMsg::Fixed32List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::Fixed32List::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Fixed32List =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFixed32List}, {}};

static void InitDefaultsFixed64List() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_Fixed64List_default_instance_;
    new (ptr) ::ChakraProtoMsg::Fixed64List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::Fixed64List::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Fixed64List =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFixed64List}, {}};

static void InitDefaultsSfixed32List() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_Sfixed32List_default_instance_;
    new (ptr) ::ChakraProtoMsg::Sfixed32List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::Sfixed32List::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Sfixed32List =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSfixed32List}, {}};

static void InitDefaultsSfixed64List() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_Sfixed64List_default_instance_;
    new (ptr) ::ChakraProtoMsg::Sfixed64List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::Sfixed64List::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Sfixed64List =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSfixed64List}, {}};

static void InitDefaultsBoolList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_BoolList_default_instance_;
    new (ptr) ::ChakraProtoMsg::BoolList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::BoolList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BoolList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBoolList}, {}};

static void InitDefaultsStringList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_StringList_default_instance_;
    new (ptr) ::ChakraProtoMsg::StringList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::StringList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StringList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStringList}, {}};

static void InitDefaultsBytesList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_BytesList_default_instance_;
    new (ptr) ::ChakraProtoMsg::BytesList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::BytesList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytesList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytesList}, {}};

static void InitDefaultsGlobalMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_GlobalMetadata_default_instance_;
    new (ptr) ::ChakraProtoMsg::GlobalMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::GlobalMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GlobalMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGlobalMetadata}, {
      &protobuf_et_5fdef_2eproto::scc_info_AttributeProto.base,}};

static void InitDefaultsNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_Node_default_instance_;
    new (ptr) ::ChakraProtoMsg::Node();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::Node::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Node =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsNode}, {
      &protobuf_et_5fdef_2eproto::scc_info_IOInfo.base,
      &protobuf_et_5fdef_2eproto::scc_info_AttributeProto.base,}};

static void InitDefaultsIOInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_IOInfo_default_instance_;
    new (ptr) ::ChakraProtoMsg::IOInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::IOInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IOInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIOInfo}, {}};

static void InitDefaultsTensor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChakraProtoMsg::_Tensor_default_instance_;
    new (ptr) ::ChakraProtoMsg::Tensor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChakraProtoMsg::Tensor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Tensor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTensor}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AttributeProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DoubleList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FloatList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Int32List.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Int64List.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Uint32List.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Uint64List.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Sint32List.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Sint64List.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Fixed32List.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Fixed64List.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Sfixed32List.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Sfixed64List.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BoolList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytesList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GlobalMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Node.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IOInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Tensor.base);
}

::google::protobuf::Metadata file_level_metadata[20];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::AttributeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::AttributeProto, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::AttributeProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::AttributeProto, doc_string_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, double_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, double_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, float_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, float_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, int32_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, int32_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, int64_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, int64_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, uint32_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, uint32_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, uint64_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, uint64_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, sint32_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, sint32_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, sint64_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, sint64_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, fixed32_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, fixed32_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, fixed64_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, fixed64_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, sfixed32_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, sfixed32_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, sfixed64_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, sfixed64_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, bool_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, bool_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, string_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, string_list_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, bytes_val_),
  offsetof(::ChakraProtoMsg::AttributeProtoDefaultTypeInternal, bytes_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::AttributeProto, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::DoubleList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::DoubleList, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::FloatList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::FloatList, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Int32List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Int32List, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Int64List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Int64List, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Uint32List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Uint32List, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Uint64List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Uint64List, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Sint32List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Sint32List, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Sint64List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Sint64List, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Fixed32List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Fixed32List, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Fixed64List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Fixed64List, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Sfixed32List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Sfixed32List, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Sfixed64List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Sfixed64List, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::BoolList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::BoolList, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::StringList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::StringList, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::BytesList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::BytesList, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::GlobalMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::GlobalMetadata, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::GlobalMetadata, attr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Node, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Node, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Node, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Node, ctrl_deps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Node, data_deps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Node, start_time_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Node, duration_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Node, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Node, outputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Node, attr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::IOInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::IOInfo, values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::IOInfo, shapes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::IOInfo, types_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Tensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Tensor, tensor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Tensor, storage_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Tensor, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Tensor, num_elem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Tensor, elem_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChakraProtoMsg::Tensor, device_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ChakraProtoMsg::AttributeProto)},
  { 38, -1, sizeof(::ChakraProtoMsg::DoubleList)},
  { 44, -1, sizeof(::ChakraProtoMsg::FloatList)},
  { 50, -1, sizeof(::ChakraProtoMsg::Int32List)},
  { 56, -1, sizeof(::ChakraProtoMsg::Int64List)},
  { 62, -1, sizeof(::ChakraProtoMsg::Uint32List)},
  { 68, -1, sizeof(::ChakraProtoMsg::Uint64List)},
  { 74, -1, sizeof(::ChakraProtoMsg::Sint32List)},
  { 80, -1, sizeof(::ChakraProtoMsg::Sint64List)},
  { 86, -1, sizeof(::ChakraProtoMsg::Fixed32List)},
  { 92, -1, sizeof(::ChakraProtoMsg::Fixed64List)},
  { 98, -1, sizeof(::ChakraProtoMsg::Sfixed32List)},
  { 104, -1, sizeof(::ChakraProtoMsg::Sfixed64List)},
  { 110, -1, sizeof(::ChakraProtoMsg::BoolList)},
  { 116, -1, sizeof(::ChakraProtoMsg::StringList)},
  { 122, -1, sizeof(::ChakraProtoMsg::BytesList)},
  { 128, -1, sizeof(::ChakraProtoMsg::GlobalMetadata)},
  { 135, -1, sizeof(::ChakraProtoMsg::Node)},
  { 150, -1, sizeof(::ChakraProtoMsg::IOInfo)},
  { 158, -1, sizeof(::ChakraProtoMsg::Tensor)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_AttributeProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_DoubleList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_FloatList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_Int32List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_Int64List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_Uint32List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_Uint64List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_Sint32List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_Sint64List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_Fixed32List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_Fixed64List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_Sfixed32List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_Sfixed64List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_BoolList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_StringList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_BytesList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_GlobalMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_IOInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChakraProtoMsg::_Tensor_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "et_def.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014et_def.proto\022\016ChakraProtoMsg\"\202\t\n\016Attri"
      "buteProto\022\014\n\004name\030\001 \001(\t\022\022\n\ndoc_string\030\002 "
      "\001(\t\022\024\n\ndouble_val\030\003 \001(\001H\000\0221\n\013double_list"
      "\030\004 \001(\0132\032.ChakraProtoMsg.DoubleListH\000\022\023\n\t"
      "float_val\030\005 \001(\002H\000\022/\n\nfloat_list\030\006 \001(\0132\031."
      "ChakraProtoMsg.FloatListH\000\022\023\n\tint32_val\030"
      "\007 \001(\005H\000\022/\n\nint32_list\030\010 \001(\0132\031.ChakraProt"
      "oMsg.Int32ListH\000\022\023\n\tint64_val\030\t \001(\003H\000\022/\n"
      "\nint64_list\030\n \001(\0132\031.ChakraProtoMsg.Int64"
      "ListH\000\022\024\n\nuint32_val\030\013 \001(\rH\000\0221\n\013uint32_l"
      "ist\030\014 \001(\0132\032.ChakraProtoMsg.Uint32ListH\000\022"
      "\024\n\nuint64_val\030\r \001(\004H\000\0221\n\013uint64_list\030\016 \001"
      "(\0132\032.ChakraProtoMsg.Uint64ListH\000\022\024\n\nsint"
      "32_val\030\017 \001(\021H\000\0221\n\013sint32_list\030\020 \001(\0132\032.Ch"
      "akraProtoMsg.Sint32ListH\000\022\024\n\nsint64_val\030"
      "\021 \001(\022H\000\0221\n\013sint64_list\030\022 \001(\0132\032.ChakraPro"
      "toMsg.Sint64ListH\000\022\025\n\013fixed32_val\030\023 \001(\007H"
      "\000\0223\n\014fixed32_list\030\024 \001(\0132\033.ChakraProtoMsg"
      ".Fixed32ListH\000\022\025\n\013fixed64_val\030\025 \001(\006H\000\0223\n"
      "\014fixed64_list\030\026 \001(\0132\033.ChakraProtoMsg.Fix"
      "ed64ListH\000\022\026\n\014sfixed32_val\030\027 \001(\017H\000\0225\n\rsf"
      "ixed32_list\030\030 \001(\0132\034.ChakraProtoMsg.Sfixe"
      "d32ListH\000\022\026\n\014sfixed64_val\030\031 \001(\020H\000\0225\n\rsfi"
      "xed64_list\030\032 \001(\0132\034.ChakraProtoMsg.Sfixed"
      "64ListH\000\022\022\n\010bool_val\030\033 \001(\010H\000\022-\n\tbool_lis"
      "t\030\034 \001(\0132\030.ChakraProtoMsg.BoolListH\000\022\024\n\ns"
      "tring_val\030\035 \001(\tH\000\0221\n\013string_list\030\036 \001(\0132\032"
      ".ChakraProtoMsg.StringListH\000\022\023\n\tbytes_va"
      "l\030\037 \001(\014H\000\022/\n\nbytes_list\030  \001(\0132\031.ChakraPr"
      "otoMsg.BytesListH\000B\007\n\005value\"\034\n\nDoubleLis"
      "t\022\016\n\006values\030\001 \003(\001\"\033\n\tFloatList\022\016\n\006values"
      "\030\001 \003(\002\"\033\n\tInt32List\022\016\n\006values\030\001 \003(\005\"\033\n\tI"
      "nt64List\022\016\n\006values\030\001 \003(\003\"\034\n\nUint32List\022\016"
      "\n\006values\030\001 \003(\r\"\034\n\nUint64List\022\016\n\006values\030\001"
      " \003(\004\"\034\n\nSint32List\022\016\n\006values\030\001 \003(\021\"\034\n\nSi"
      "nt64List\022\016\n\006values\030\001 \003(\022\"\035\n\013Fixed32List\022"
      "\016\n\006values\030\001 \003(\007\"\035\n\013Fixed64List\022\016\n\006values"
      "\030\001 \003(\006\"\036\n\014Sfixed32List\022\016\n\006values\030\001 \003(\017\"\036"
      "\n\014Sfixed64List\022\016\n\006values\030\001 \003(\020\"\032\n\010BoolLi"
      "st\022\016\n\006values\030\001 \003(\010\"\034\n\nStringList\022\016\n\006valu"
      "es\030\001 \003(\t\"\033\n\tBytesList\022\016\n\006values\030\001 \003(\014\"O\n"
      "\016GlobalMetadata\022\017\n\007version\030\001 \001(\t\022,\n\004attr"
      "\030\002 \003(\0132\036.ChakraProtoMsg.AttributeProto\"\241"
      "\002\n\004Node\022\n\n\002id\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\022&\n\004typ"
      "e\030\003 \001(\0162\030.ChakraProtoMsg.NodeType\022\021\n\tctr"
      "l_deps\030\004 \003(\004\022\021\n\tdata_deps\030\005 \003(\004\022\031\n\021start"
      "_time_micros\030\006 \001(\004\022\027\n\017duration_micros\030\007 "
      "\001(\004\022&\n\006inputs\030\010 \001(\0132\026.ChakraProtoMsg.IOI"
      "nfo\022\'\n\007outputs\030\t \001(\0132\026.ChakraProtoMsg.IO"
      "Info\022,\n\004attr\030\n \003(\0132\036.ChakraProtoMsg.Attr"
      "ibuteProto\"7\n\006IOInfo\022\016\n\006values\030\001 \001(\t\022\016\n\006"
      "shapes\030\002 \001(\t\022\r\n\005types\030\003 \001(\t\"u\n\006Tensor\022\021\n"
      "\ttensor_id\030\001 \001(\004\022\022\n\nstorage_id\030\002 \001(\004\022\016\n\006"
      "offset\030\003 \001(\004\022\020\n\010num_elem\030\004 \001(\004\022\022\n\nelem_b"
      "ytes\030\005 \001(\004\022\016\n\006device\030\006 \001(\t*\241\001\n\010NodeType\022"
      "\020\n\014INVALID_NODE\020\000\022\021\n\rMETADATA_NODE\020\001\022\021\n\r"
      "MEM_LOAD_NODE\020\002\022\022\n\016MEM_STORE_NODE\020\003\022\r\n\tC"
      "OMP_NODE\020\004\022\022\n\016COMM_SEND_NODE\020\005\022\022\n\016COMM_R"
      "ECV_NODE\020\006\022\022\n\016COMM_COLL_NODE\020\007*\263\001\n\022Colle"
      "ctiveCommType\022\016\n\nALL_REDUCE\020\000\022\n\n\006REDUCE\020"
      "\001\022\016\n\nALL_GATHER\020\002\022\n\n\006GATHER\020\003\022\013\n\007SCATTER"
      "\020\004\022\r\n\tBROADCAST\020\005\022\016\n\nALL_TO_ALL\020\006\022\022\n\016RED"
      "UCE_SCATTER\020\007\022\030\n\024REDUCE_SCATTER_BLOCK\020\010\022"
      "\013\n\007BARRIER\020\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2540);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "et_def.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_et_5fdef_2eproto
namespace ChakraProtoMsg {
const ::google::protobuf::EnumDescriptor* NodeType_descriptor() {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_et_5fdef_2eproto::file_level_enum_descriptors[0];
}
bool NodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CollectiveCommType_descriptor() {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_et_5fdef_2eproto::file_level_enum_descriptors[1];
}
bool CollectiveCommType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AttributeProto::InitAsDefaultInstance() {
  ::ChakraProtoMsg::_AttributeProto_default_instance_.double_val_ = 0;
  ::ChakraProtoMsg::_AttributeProto_default_instance_.double_list_ = const_cast< ::ChakraProtoMsg::DoubleList*>(
      ::ChakraProtoMsg::DoubleList::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.float_val_ = 0;
  ::ChakraProtoMsg::_AttributeProto_default_instance_.float_list_ = const_cast< ::ChakraProtoMsg::FloatList*>(
      ::ChakraProtoMsg::FloatList::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.int32_val_ = 0;
  ::ChakraProtoMsg::_AttributeProto_default_instance_.int32_list_ = const_cast< ::ChakraProtoMsg::Int32List*>(
      ::ChakraProtoMsg::Int32List::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.int64_val_ = GOOGLE_LONGLONG(0);
  ::ChakraProtoMsg::_AttributeProto_default_instance_.int64_list_ = const_cast< ::ChakraProtoMsg::Int64List*>(
      ::ChakraProtoMsg::Int64List::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.uint32_val_ = 0u;
  ::ChakraProtoMsg::_AttributeProto_default_instance_.uint32_list_ = const_cast< ::ChakraProtoMsg::Uint32List*>(
      ::ChakraProtoMsg::Uint32List::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.uint64_val_ = GOOGLE_ULONGLONG(0);
  ::ChakraProtoMsg::_AttributeProto_default_instance_.uint64_list_ = const_cast< ::ChakraProtoMsg::Uint64List*>(
      ::ChakraProtoMsg::Uint64List::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.sint32_val_ = 0;
  ::ChakraProtoMsg::_AttributeProto_default_instance_.sint32_list_ = const_cast< ::ChakraProtoMsg::Sint32List*>(
      ::ChakraProtoMsg::Sint32List::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.sint64_val_ = GOOGLE_LONGLONG(0);
  ::ChakraProtoMsg::_AttributeProto_default_instance_.sint64_list_ = const_cast< ::ChakraProtoMsg::Sint64List*>(
      ::ChakraProtoMsg::Sint64List::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.fixed32_val_ = 0u;
  ::ChakraProtoMsg::_AttributeProto_default_instance_.fixed32_list_ = const_cast< ::ChakraProtoMsg::Fixed32List*>(
      ::ChakraProtoMsg::Fixed32List::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.fixed64_val_ = GOOGLE_ULONGLONG(0);
  ::ChakraProtoMsg::_AttributeProto_default_instance_.fixed64_list_ = const_cast< ::ChakraProtoMsg::Fixed64List*>(
      ::ChakraProtoMsg::Fixed64List::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.sfixed32_val_ = 0;
  ::ChakraProtoMsg::_AttributeProto_default_instance_.sfixed32_list_ = const_cast< ::ChakraProtoMsg::Sfixed32List*>(
      ::ChakraProtoMsg::Sfixed32List::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.sfixed64_val_ = GOOGLE_LONGLONG(0);
  ::ChakraProtoMsg::_AttributeProto_default_instance_.sfixed64_list_ = const_cast< ::ChakraProtoMsg::Sfixed64List*>(
      ::ChakraProtoMsg::Sfixed64List::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.bool_val_ = false;
  ::ChakraProtoMsg::_AttributeProto_default_instance_.bool_list_ = const_cast< ::ChakraProtoMsg::BoolList*>(
      ::ChakraProtoMsg::BoolList::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.string_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.string_list_ = const_cast< ::ChakraProtoMsg::StringList*>(
      ::ChakraProtoMsg::StringList::internal_default_instance());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.bytes_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::ChakraProtoMsg::_AttributeProto_default_instance_.bytes_list_ = const_cast< ::ChakraProtoMsg::BytesList*>(
      ::ChakraProtoMsg::BytesList::internal_default_instance());
}
void AttributeProto::set_allocated_double_list(::ChakraProtoMsg::DoubleList* double_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (double_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      double_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, double_list, submessage_arena);
    }
    set_has_double_list();
    value_.double_list_ = double_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.double_list)
}
void AttributeProto::set_allocated_float_list(::ChakraProtoMsg::FloatList* float_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (float_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      float_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, float_list, submessage_arena);
    }
    set_has_float_list();
    value_.float_list_ = float_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.float_list)
}
void AttributeProto::set_allocated_int32_list(::ChakraProtoMsg::Int32List* int32_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (int32_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      int32_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, int32_list, submessage_arena);
    }
    set_has_int32_list();
    value_.int32_list_ = int32_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.int32_list)
}
void AttributeProto::set_allocated_int64_list(::ChakraProtoMsg::Int64List* int64_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (int64_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      int64_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, int64_list, submessage_arena);
    }
    set_has_int64_list();
    value_.int64_list_ = int64_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.int64_list)
}
void AttributeProto::set_allocated_uint32_list(::ChakraProtoMsg::Uint32List* uint32_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (uint32_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uint32_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uint32_list, submessage_arena);
    }
    set_has_uint32_list();
    value_.uint32_list_ = uint32_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.uint32_list)
}
void AttributeProto::set_allocated_uint64_list(::ChakraProtoMsg::Uint64List* uint64_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (uint64_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uint64_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uint64_list, submessage_arena);
    }
    set_has_uint64_list();
    value_.uint64_list_ = uint64_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.uint64_list)
}
void AttributeProto::set_allocated_sint32_list(::ChakraProtoMsg::Sint32List* sint32_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (sint32_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sint32_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sint32_list, submessage_arena);
    }
    set_has_sint32_list();
    value_.sint32_list_ = sint32_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.sint32_list)
}
void AttributeProto::set_allocated_sint64_list(::ChakraProtoMsg::Sint64List* sint64_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (sint64_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sint64_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sint64_list, submessage_arena);
    }
    set_has_sint64_list();
    value_.sint64_list_ = sint64_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.sint64_list)
}
void AttributeProto::set_allocated_fixed32_list(::ChakraProtoMsg::Fixed32List* fixed32_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (fixed32_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fixed32_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fixed32_list, submessage_arena);
    }
    set_has_fixed32_list();
    value_.fixed32_list_ = fixed32_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.fixed32_list)
}
void AttributeProto::set_allocated_fixed64_list(::ChakraProtoMsg::Fixed64List* fixed64_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (fixed64_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fixed64_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fixed64_list, submessage_arena);
    }
    set_has_fixed64_list();
    value_.fixed64_list_ = fixed64_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.fixed64_list)
}
void AttributeProto::set_allocated_sfixed32_list(::ChakraProtoMsg::Sfixed32List* sfixed32_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (sfixed32_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sfixed32_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sfixed32_list, submessage_arena);
    }
    set_has_sfixed32_list();
    value_.sfixed32_list_ = sfixed32_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.sfixed32_list)
}
void AttributeProto::set_allocated_sfixed64_list(::ChakraProtoMsg::Sfixed64List* sfixed64_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (sfixed64_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sfixed64_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sfixed64_list, submessage_arena);
    }
    set_has_sfixed64_list();
    value_.sfixed64_list_ = sfixed64_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.sfixed64_list)
}
void AttributeProto::set_allocated_bool_list(::ChakraProtoMsg::BoolList* bool_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (bool_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bool_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bool_list, submessage_arena);
    }
    set_has_bool_list();
    value_.bool_list_ = bool_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.bool_list)
}
void AttributeProto::set_allocated_string_list(::ChakraProtoMsg::StringList* string_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (string_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_list, submessage_arena);
    }
    set_has_string_list();
    value_.string_list_ = string_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.string_list)
}
void AttributeProto::set_allocated_bytes_list(::ChakraProtoMsg::BytesList* bytes_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (bytes_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bytes_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bytes_list, submessage_arena);
    }
    set_has_bytes_list();
    value_.bytes_list_ = bytes_list;
  }
  // @@protoc_insertion_point(field_set_allocated:ChakraProtoMsg.AttributeProto.bytes_list)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttributeProto::kNameFieldNumber;
const int AttributeProto::kDocStringFieldNumber;
const int AttributeProto::kDoubleValFieldNumber;
const int AttributeProto::kDoubleListFieldNumber;
const int AttributeProto::kFloatValFieldNumber;
const int AttributeProto::kFloatListFieldNumber;
const int AttributeProto::kInt32ValFieldNumber;
const int AttributeProto::kInt32ListFieldNumber;
const int AttributeProto::kInt64ValFieldNumber;
const int AttributeProto::kInt64ListFieldNumber;
const int AttributeProto::kUint32ValFieldNumber;
const int AttributeProto::kUint32ListFieldNumber;
const int AttributeProto::kUint64ValFieldNumber;
const int AttributeProto::kUint64ListFieldNumber;
const int AttributeProto::kSint32ValFieldNumber;
const int AttributeProto::kSint32ListFieldNumber;
const int AttributeProto::kSint64ValFieldNumber;
const int AttributeProto::kSint64ListFieldNumber;
const int AttributeProto::kFixed32ValFieldNumber;
const int AttributeProto::kFixed32ListFieldNumber;
const int AttributeProto::kFixed64ValFieldNumber;
const int AttributeProto::kFixed64ListFieldNumber;
const int AttributeProto::kSfixed32ValFieldNumber;
const int AttributeProto::kSfixed32ListFieldNumber;
const int AttributeProto::kSfixed64ValFieldNumber;
const int AttributeProto::kSfixed64ListFieldNumber;
const int AttributeProto::kBoolValFieldNumber;
const int AttributeProto::kBoolListFieldNumber;
const int AttributeProto::kStringValFieldNumber;
const int AttributeProto::kStringListFieldNumber;
const int AttributeProto::kBytesValFieldNumber;
const int AttributeProto::kBytesListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttributeProto::AttributeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_AttributeProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.AttributeProto)
}
AttributeProto::AttributeProto(const AttributeProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.doc_string().size() > 0) {
    doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
  }
  clear_has_value();
  switch (from.value_case()) {
    case kDoubleVal: {
      set_double_val(from.double_val());
      break;
    }
    case kDoubleList: {
      mutable_double_list()->::ChakraProtoMsg::DoubleList::MergeFrom(from.double_list());
      break;
    }
    case kFloatVal: {
      set_float_val(from.float_val());
      break;
    }
    case kFloatList: {
      mutable_float_list()->::ChakraProtoMsg::FloatList::MergeFrom(from.float_list());
      break;
    }
    case kInt32Val: {
      set_int32_val(from.int32_val());
      break;
    }
    case kInt32List: {
      mutable_int32_list()->::ChakraProtoMsg::Int32List::MergeFrom(from.int32_list());
      break;
    }
    case kInt64Val: {
      set_int64_val(from.int64_val());
      break;
    }
    case kInt64List: {
      mutable_int64_list()->::ChakraProtoMsg::Int64List::MergeFrom(from.int64_list());
      break;
    }
    case kUint32Val: {
      set_uint32_val(from.uint32_val());
      break;
    }
    case kUint32List: {
      mutable_uint32_list()->::ChakraProtoMsg::Uint32List::MergeFrom(from.uint32_list());
      break;
    }
    case kUint64Val: {
      set_uint64_val(from.uint64_val());
      break;
    }
    case kUint64List: {
      mutable_uint64_list()->::ChakraProtoMsg::Uint64List::MergeFrom(from.uint64_list());
      break;
    }
    case kSint32Val: {
      set_sint32_val(from.sint32_val());
      break;
    }
    case kSint32List: {
      mutable_sint32_list()->::ChakraProtoMsg::Sint32List::MergeFrom(from.sint32_list());
      break;
    }
    case kSint64Val: {
      set_sint64_val(from.sint64_val());
      break;
    }
    case kSint64List: {
      mutable_sint64_list()->::ChakraProtoMsg::Sint64List::MergeFrom(from.sint64_list());
      break;
    }
    case kFixed32Val: {
      set_fixed32_val(from.fixed32_val());
      break;
    }
    case kFixed32List: {
      mutable_fixed32_list()->::ChakraProtoMsg::Fixed32List::MergeFrom(from.fixed32_list());
      break;
    }
    case kFixed64Val: {
      set_fixed64_val(from.fixed64_val());
      break;
    }
    case kFixed64List: {
      mutable_fixed64_list()->::ChakraProtoMsg::Fixed64List::MergeFrom(from.fixed64_list());
      break;
    }
    case kSfixed32Val: {
      set_sfixed32_val(from.sfixed32_val());
      break;
    }
    case kSfixed32List: {
      mutable_sfixed32_list()->::ChakraProtoMsg::Sfixed32List::MergeFrom(from.sfixed32_list());
      break;
    }
    case kSfixed64Val: {
      set_sfixed64_val(from.sfixed64_val());
      break;
    }
    case kSfixed64List: {
      mutable_sfixed64_list()->::ChakraProtoMsg::Sfixed64List::MergeFrom(from.sfixed64_list());
      break;
    }
    case kBoolVal: {
      set_bool_val(from.bool_val());
      break;
    }
    case kBoolList: {
      mutable_bool_list()->::ChakraProtoMsg::BoolList::MergeFrom(from.bool_list());
      break;
    }
    case kStringVal: {
      set_string_val(from.string_val());
      break;
    }
    case kStringList: {
      mutable_string_list()->::ChakraProtoMsg::StringList::MergeFrom(from.string_list());
      break;
    }
    case kBytesVal: {
      set_bytes_val(from.bytes_val());
      break;
    }
    case kBytesList: {
      mutable_bytes_list()->::ChakraProtoMsg::BytesList::MergeFrom(from.bytes_list());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.AttributeProto)
}

void AttributeProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}

AttributeProto::~AttributeProto() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.AttributeProto)
  SharedDtor();
}

void AttributeProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
}

void AttributeProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AttributeProto::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttributeProto& AttributeProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_AttributeProto.base);
  return *internal_default_instance();
}


void AttributeProto::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:ChakraProtoMsg.AttributeProto)
  switch (value_case()) {
    case kDoubleVal: {
      // No need to clear
      break;
    }
    case kDoubleList: {
      delete value_.double_list_;
      break;
    }
    case kFloatVal: {
      // No need to clear
      break;
    }
    case kFloatList: {
      delete value_.float_list_;
      break;
    }
    case kInt32Val: {
      // No need to clear
      break;
    }
    case kInt32List: {
      delete value_.int32_list_;
      break;
    }
    case kInt64Val: {
      // No need to clear
      break;
    }
    case kInt64List: {
      delete value_.int64_list_;
      break;
    }
    case kUint32Val: {
      // No need to clear
      break;
    }
    case kUint32List: {
      delete value_.uint32_list_;
      break;
    }
    case kUint64Val: {
      // No need to clear
      break;
    }
    case kUint64List: {
      delete value_.uint64_list_;
      break;
    }
    case kSint32Val: {
      // No need to clear
      break;
    }
    case kSint32List: {
      delete value_.sint32_list_;
      break;
    }
    case kSint64Val: {
      // No need to clear
      break;
    }
    case kSint64List: {
      delete value_.sint64_list_;
      break;
    }
    case kFixed32Val: {
      // No need to clear
      break;
    }
    case kFixed32List: {
      delete value_.fixed32_list_;
      break;
    }
    case kFixed64Val: {
      // No need to clear
      break;
    }
    case kFixed64List: {
      delete value_.fixed64_list_;
      break;
    }
    case kSfixed32Val: {
      // No need to clear
      break;
    }
    case kSfixed32List: {
      delete value_.sfixed32_list_;
      break;
    }
    case kSfixed64Val: {
      // No need to clear
      break;
    }
    case kSfixed64List: {
      delete value_.sfixed64_list_;
      break;
    }
    case kBoolVal: {
      // No need to clear
      break;
    }
    case kBoolList: {
      delete value_.bool_list_;
      break;
    }
    case kStringVal: {
      value_.string_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kStringList: {
      delete value_.string_list_;
      break;
    }
    case kBytesVal: {
      value_.bytes_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBytesList: {
      delete value_.bytes_list_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void AttributeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.AttributeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_value();
  _internal_metadata_.Clear();
}

bool AttributeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.AttributeProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChakraProtoMsg.AttributeProto.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string doc_string = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->doc_string().data(), static_cast<int>(this->doc_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChakraProtoMsg.AttributeProto.doc_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double double_val = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.double_val_)));
          set_has_double_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.DoubleList double_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_double_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_val = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_.float_val_)));
          set_has_float_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.FloatList float_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_float_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 int32_val = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_.int32_val_)));
          set_has_int32_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.Int32List int32_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_int32_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int64_val = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int64_val_)));
          set_has_int64_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.Int64List int64_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_int64_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uint32_val = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_.uint32_val_)));
          set_has_uint32_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.Uint32List uint32_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uint32_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uint64_val = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_.uint64_val_)));
          set_has_uint64_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.Uint64List uint64_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uint64_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 sint32_val = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &value_.sint32_val_)));
          set_has_sint32_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.Sint32List sint32_list = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sint32_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 sint64_val = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &value_.sint64_val_)));
          set_has_sint64_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.Sint64List sint64_list = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sint64_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 fixed32_val = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &value_.fixed32_val_)));
          set_has_fixed32_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.Fixed32List fixed32_list = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fixed32_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 fixed64_val = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &value_.fixed64_val_)));
          set_has_fixed64_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.Fixed64List fixed64_list = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fixed64_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 sfixed32_val = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(189u /* 189 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &value_.sfixed32_val_)));
          set_has_sfixed32_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.Sfixed32List sfixed32_list = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sfixed32_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed64 sfixed64_val = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(201u /* 201 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &value_.sfixed64_val_)));
          set_has_sfixed64_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.Sfixed64List sfixed64_list = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sfixed64_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool_val = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.bool_val_)));
          set_has_bool_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.BoolList bool_list = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bool_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string_val = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_val()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_val().data(), static_cast<int>(this->string_val().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChakraProtoMsg.AttributeProto.string_val"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.StringList string_list = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bytes_val = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.BytesList bytes_list = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bytes_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.AttributeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.AttributeProto)
  return false;
#undef DO_
}

void AttributeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.AttributeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.AttributeProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string doc_string = 2;
  if (this->doc_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.AttributeProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->doc_string(), output);
  }

  // double double_val = 3;
  if (has_double_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->double_val(), output);
  }

  // .ChakraProtoMsg.DoubleList double_list = 4;
  if (has_double_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_double_list(), output);
  }

  // float float_val = 5;
  if (has_float_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->float_val(), output);
  }

  // .ChakraProtoMsg.FloatList float_list = 6;
  if (has_float_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_float_list(), output);
  }

  // int32 int32_val = 7;
  if (has_int32_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->int32_val(), output);
  }

  // .ChakraProtoMsg.Int32List int32_list = 8;
  if (has_int32_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_int32_list(), output);
  }

  // int64 int64_val = 9;
  if (has_int64_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->int64_val(), output);
  }

  // .ChakraProtoMsg.Int64List int64_list = 10;
  if (has_int64_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_int64_list(), output);
  }

  // uint32 uint32_val = 11;
  if (has_uint32_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->uint32_val(), output);
  }

  // .ChakraProtoMsg.Uint32List uint32_list = 12;
  if (has_uint32_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_uint32_list(), output);
  }

  // uint64 uint64_val = 13;
  if (has_uint64_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->uint64_val(), output);
  }

  // .ChakraProtoMsg.Uint64List uint64_list = 14;
  if (has_uint64_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_uint64_list(), output);
  }

  // sint32 sint32_val = 15;
  if (has_sint32_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(15, this->sint32_val(), output);
  }

  // .ChakraProtoMsg.Sint32List sint32_list = 16;
  if (has_sint32_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_sint32_list(), output);
  }

  // sint64 sint64_val = 17;
  if (has_sint64_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(17, this->sint64_val(), output);
  }

  // .ChakraProtoMsg.Sint64List sint64_list = 18;
  if (has_sint64_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_sint64_list(), output);
  }

  // fixed32 fixed32_val = 19;
  if (has_fixed32_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(19, this->fixed32_val(), output);
  }

  // .ChakraProtoMsg.Fixed32List fixed32_list = 20;
  if (has_fixed32_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_fixed32_list(), output);
  }

  // fixed64 fixed64_val = 21;
  if (has_fixed64_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(21, this->fixed64_val(), output);
  }

  // .ChakraProtoMsg.Fixed64List fixed64_list = 22;
  if (has_fixed64_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_fixed64_list(), output);
  }

  // sfixed32 sfixed32_val = 23;
  if (has_sfixed32_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(23, this->sfixed32_val(), output);
  }

  // .ChakraProtoMsg.Sfixed32List sfixed32_list = 24;
  if (has_sfixed32_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_sfixed32_list(), output);
  }

  // sfixed64 sfixed64_val = 25;
  if (has_sfixed64_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(25, this->sfixed64_val(), output);
  }

  // .ChakraProtoMsg.Sfixed64List sfixed64_list = 26;
  if (has_sfixed64_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_sfixed64_list(), output);
  }

  // bool bool_val = 27;
  if (has_bool_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->bool_val(), output);
  }

  // .ChakraProtoMsg.BoolList bool_list = 28;
  if (has_bool_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_bool_list(), output);
  }

  // string string_val = 29;
  if (has_string_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_val().data(), static_cast<int>(this->string_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.AttributeProto.string_val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->string_val(), output);
  }

  // .ChakraProtoMsg.StringList string_list = 30;
  if (has_string_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_string_list(), output);
  }

  // bytes bytes_val = 31;
  if (has_bytes_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      31, this->bytes_val(), output);
  }

  // .ChakraProtoMsg.BytesList bytes_list = 32;
  if (has_bytes_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->_internal_bytes_list(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.AttributeProto)
}

::google::protobuf::uint8* AttributeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.AttributeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.AttributeProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string doc_string = 2;
  if (this->doc_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.AttributeProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->doc_string(), target);
  }

  // double double_val = 3;
  if (has_double_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->double_val(), target);
  }

  // .ChakraProtoMsg.DoubleList double_list = 4;
  if (has_double_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_double_list(), deterministic, target);
  }

  // float float_val = 5;
  if (has_float_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->float_val(), target);
  }

  // .ChakraProtoMsg.FloatList float_list = 6;
  if (has_float_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_float_list(), deterministic, target);
  }

  // int32 int32_val = 7;
  if (has_int32_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->int32_val(), target);
  }

  // .ChakraProtoMsg.Int32List int32_list = 8;
  if (has_int32_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_int32_list(), deterministic, target);
  }

  // int64 int64_val = 9;
  if (has_int64_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->int64_val(), target);
  }

  // .ChakraProtoMsg.Int64List int64_list = 10;
  if (has_int64_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_int64_list(), deterministic, target);
  }

  // uint32 uint32_val = 11;
  if (has_uint32_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->uint32_val(), target);
  }

  // .ChakraProtoMsg.Uint32List uint32_list = 12;
  if (has_uint32_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_uint32_list(), deterministic, target);
  }

  // uint64 uint64_val = 13;
  if (has_uint64_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->uint64_val(), target);
  }

  // .ChakraProtoMsg.Uint64List uint64_list = 14;
  if (has_uint64_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_uint64_list(), deterministic, target);
  }

  // sint32 sint32_val = 15;
  if (has_sint32_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(15, this->sint32_val(), target);
  }

  // .ChakraProtoMsg.Sint32List sint32_list = 16;
  if (has_sint32_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_sint32_list(), deterministic, target);
  }

  // sint64 sint64_val = 17;
  if (has_sint64_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(17, this->sint64_val(), target);
  }

  // .ChakraProtoMsg.Sint64List sint64_list = 18;
  if (has_sint64_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_sint64_list(), deterministic, target);
  }

  // fixed32 fixed32_val = 19;
  if (has_fixed32_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(19, this->fixed32_val(), target);
  }

  // .ChakraProtoMsg.Fixed32List fixed32_list = 20;
  if (has_fixed32_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_fixed32_list(), deterministic, target);
  }

  // fixed64 fixed64_val = 21;
  if (has_fixed64_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(21, this->fixed64_val(), target);
  }

  // .ChakraProtoMsg.Fixed64List fixed64_list = 22;
  if (has_fixed64_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_fixed64_list(), deterministic, target);
  }

  // sfixed32 sfixed32_val = 23;
  if (has_sfixed32_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(23, this->sfixed32_val(), target);
  }

  // .ChakraProtoMsg.Sfixed32List sfixed32_list = 24;
  if (has_sfixed32_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_sfixed32_list(), deterministic, target);
  }

  // sfixed64 sfixed64_val = 25;
  if (has_sfixed64_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(25, this->sfixed64_val(), target);
  }

  // .ChakraProtoMsg.Sfixed64List sfixed64_list = 26;
  if (has_sfixed64_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_sfixed64_list(), deterministic, target);
  }

  // bool bool_val = 27;
  if (has_bool_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->bool_val(), target);
  }

  // .ChakraProtoMsg.BoolList bool_list = 28;
  if (has_bool_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_bool_list(), deterministic, target);
  }

  // string string_val = 29;
  if (has_string_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_val().data(), static_cast<int>(this->string_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.AttributeProto.string_val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->string_val(), target);
  }

  // .ChakraProtoMsg.StringList string_list = 30;
  if (has_string_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_string_list(), deterministic, target);
  }

  // bytes bytes_val = 31;
  if (has_bytes_val()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        31, this->bytes_val(), target);
  }

  // .ChakraProtoMsg.BytesList bytes_list = 32;
  if (has_bytes_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->_internal_bytes_list(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.AttributeProto)
  return target;
}

size_t AttributeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.AttributeProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string doc_string = 2;
  if (this->doc_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->doc_string());
  }

  switch (value_case()) {
    // double double_val = 3;
    case kDoubleVal: {
      total_size += 1 + 8;
      break;
    }
    // .ChakraProtoMsg.DoubleList double_list = 4;
    case kDoubleList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.double_list_);
      break;
    }
    // float float_val = 5;
    case kFloatVal: {
      total_size += 1 + 4;
      break;
    }
    // .ChakraProtoMsg.FloatList float_list = 6;
    case kFloatList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.float_list_);
      break;
    }
    // int32 int32_val = 7;
    case kInt32Val: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int32_val());
      break;
    }
    // .ChakraProtoMsg.Int32List int32_list = 8;
    case kInt32List: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.int32_list_);
      break;
    }
    // int64 int64_val = 9;
    case kInt64Val: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_val());
      break;
    }
    // .ChakraProtoMsg.Int64List int64_list = 10;
    case kInt64List: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.int64_list_);
      break;
    }
    // uint32 uint32_val = 11;
    case kUint32Val: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uint32_val());
      break;
    }
    // .ChakraProtoMsg.Uint32List uint32_list = 12;
    case kUint32List: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.uint32_list_);
      break;
    }
    // uint64 uint64_val = 13;
    case kUint64Val: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint64_val());
      break;
    }
    // .ChakraProtoMsg.Uint64List uint64_list = 14;
    case kUint64List: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.uint64_list_);
      break;
    }
    // sint32 sint32_val = 15;
    case kSint32Val: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->sint32_val());
      break;
    }
    // .ChakraProtoMsg.Sint32List sint32_list = 16;
    case kSint32List: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.sint32_list_);
      break;
    }
    // sint64 sint64_val = 17;
    case kSint64Val: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->sint64_val());
      break;
    }
    // .ChakraProtoMsg.Sint64List sint64_list = 18;
    case kSint64List: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.sint64_list_);
      break;
    }
    // fixed32 fixed32_val = 19;
    case kFixed32Val: {
      total_size += 2 + 4;
      break;
    }
    // .ChakraProtoMsg.Fixed32List fixed32_list = 20;
    case kFixed32List: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.fixed32_list_);
      break;
    }
    // fixed64 fixed64_val = 21;
    case kFixed64Val: {
      total_size += 2 + 8;
      break;
    }
    // .ChakraProtoMsg.Fixed64List fixed64_list = 22;
    case kFixed64List: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.fixed64_list_);
      break;
    }
    // sfixed32 sfixed32_val = 23;
    case kSfixed32Val: {
      total_size += 2 + 4;
      break;
    }
    // .ChakraProtoMsg.Sfixed32List sfixed32_list = 24;
    case kSfixed32List: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.sfixed32_list_);
      break;
    }
    // sfixed64 sfixed64_val = 25;
    case kSfixed64Val: {
      total_size += 2 + 8;
      break;
    }
    // .ChakraProtoMsg.Sfixed64List sfixed64_list = 26;
    case kSfixed64List: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.sfixed64_list_);
      break;
    }
    // bool bool_val = 27;
    case kBoolVal: {
      total_size += 2 + 1;
      break;
    }
    // .ChakraProtoMsg.BoolList bool_list = 28;
    case kBoolList: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.bool_list_);
      break;
    }
    // string string_val = 29;
    case kStringVal: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_val());
      break;
    }
    // .ChakraProtoMsg.StringList string_list = 30;
    case kStringList: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.string_list_);
      break;
    }
    // bytes bytes_val = 31;
    case kBytesVal: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_val());
      break;
    }
    // .ChakraProtoMsg.BytesList bytes_list = 32;
    case kBytesList: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.bytes_list_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttributeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.AttributeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AttributeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttributeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.AttributeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.AttributeProto)
    MergeFrom(*source);
  }
}

void AttributeProto::MergeFrom(const AttributeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.AttributeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.doc_string().size() > 0) {

    doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
  }
  switch (from.value_case()) {
    case kDoubleVal: {
      set_double_val(from.double_val());
      break;
    }
    case kDoubleList: {
      mutable_double_list()->::ChakraProtoMsg::DoubleList::MergeFrom(from.double_list());
      break;
    }
    case kFloatVal: {
      set_float_val(from.float_val());
      break;
    }
    case kFloatList: {
      mutable_float_list()->::ChakraProtoMsg::FloatList::MergeFrom(from.float_list());
      break;
    }
    case kInt32Val: {
      set_int32_val(from.int32_val());
      break;
    }
    case kInt32List: {
      mutable_int32_list()->::ChakraProtoMsg::Int32List::MergeFrom(from.int32_list());
      break;
    }
    case kInt64Val: {
      set_int64_val(from.int64_val());
      break;
    }
    case kInt64List: {
      mutable_int64_list()->::ChakraProtoMsg::Int64List::MergeFrom(from.int64_list());
      break;
    }
    case kUint32Val: {
      set_uint32_val(from.uint32_val());
      break;
    }
    case kUint32List: {
      mutable_uint32_list()->::ChakraProtoMsg::Uint32List::MergeFrom(from.uint32_list());
      break;
    }
    case kUint64Val: {
      set_uint64_val(from.uint64_val());
      break;
    }
    case kUint64List: {
      mutable_uint64_list()->::ChakraProtoMsg::Uint64List::MergeFrom(from.uint64_list());
      break;
    }
    case kSint32Val: {
      set_sint32_val(from.sint32_val());
      break;
    }
    case kSint32List: {
      mutable_sint32_list()->::ChakraProtoMsg::Sint32List::MergeFrom(from.sint32_list());
      break;
    }
    case kSint64Val: {
      set_sint64_val(from.sint64_val());
      break;
    }
    case kSint64List: {
      mutable_sint64_list()->::ChakraProtoMsg::Sint64List::MergeFrom(from.sint64_list());
      break;
    }
    case kFixed32Val: {
      set_fixed32_val(from.fixed32_val());
      break;
    }
    case kFixed32List: {
      mutable_fixed32_list()->::ChakraProtoMsg::Fixed32List::MergeFrom(from.fixed32_list());
      break;
    }
    case kFixed64Val: {
      set_fixed64_val(from.fixed64_val());
      break;
    }
    case kFixed64List: {
      mutable_fixed64_list()->::ChakraProtoMsg::Fixed64List::MergeFrom(from.fixed64_list());
      break;
    }
    case kSfixed32Val: {
      set_sfixed32_val(from.sfixed32_val());
      break;
    }
    case kSfixed32List: {
      mutable_sfixed32_list()->::ChakraProtoMsg::Sfixed32List::MergeFrom(from.sfixed32_list());
      break;
    }
    case kSfixed64Val: {
      set_sfixed64_val(from.sfixed64_val());
      break;
    }
    case kSfixed64List: {
      mutable_sfixed64_list()->::ChakraProtoMsg::Sfixed64List::MergeFrom(from.sfixed64_list());
      break;
    }
    case kBoolVal: {
      set_bool_val(from.bool_val());
      break;
    }
    case kBoolList: {
      mutable_bool_list()->::ChakraProtoMsg::BoolList::MergeFrom(from.bool_list());
      break;
    }
    case kStringVal: {
      set_string_val(from.string_val());
      break;
    }
    case kStringList: {
      mutable_string_list()->::ChakraProtoMsg::StringList::MergeFrom(from.string_list());
      break;
    }
    case kBytesVal: {
      set_bytes_val(from.bytes_val());
      break;
    }
    case kBytesList: {
      mutable_bytes_list()->::ChakraProtoMsg::BytesList::MergeFrom(from.bytes_list());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void AttributeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.AttributeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeProto::CopyFrom(const AttributeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.AttributeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeProto::IsInitialized() const {
  return true;
}

void AttributeProto::Swap(AttributeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttributeProto::InternalSwap(AttributeProto* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  doc_string_.Swap(&other->doc_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AttributeProto::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DoubleList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoubleList::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoubleList::DoubleList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_DoubleList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.DoubleList)
}
DoubleList::DoubleList(const DoubleList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.DoubleList)
}

void DoubleList::SharedCtor() {
}

DoubleList::~DoubleList() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.DoubleList)
  SharedDtor();
}

void DoubleList::SharedDtor() {
}

void DoubleList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DoubleList::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DoubleList& DoubleList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_DoubleList.base);
  return *internal_default_instance();
}


void DoubleList::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.DoubleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool DoubleList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.DoubleList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.DoubleList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.DoubleList)
  return false;
#undef DO_
}

void DoubleList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.DoubleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->values().data(), this->values_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.DoubleList)
}

::google::protobuf::uint8* DoubleList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.DoubleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.DoubleList)
  return target;
}

size_t DoubleList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.DoubleList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DoubleList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.DoubleList)
  GOOGLE_DCHECK_NE(&from, this);
  const DoubleList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoubleList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.DoubleList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.DoubleList)
    MergeFrom(*source);
  }
}

void DoubleList::MergeFrom(const DoubleList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.DoubleList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void DoubleList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.DoubleList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoubleList::CopyFrom(const DoubleList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.DoubleList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoubleList::IsInitialized() const {
  return true;
}

void DoubleList::Swap(DoubleList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoubleList::InternalSwap(DoubleList* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DoubleList::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FloatList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatList::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatList::FloatList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_FloatList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.FloatList)
}
FloatList::FloatList(const FloatList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.FloatList)
}

void FloatList::SharedCtor() {
}

FloatList::~FloatList() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.FloatList)
  SharedDtor();
}

void FloatList::SharedDtor() {
}

void FloatList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FloatList::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FloatList& FloatList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_FloatList.base);
  return *internal_default_instance();
}


void FloatList::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.FloatList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool FloatList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.FloatList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.FloatList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.FloatList)
  return false;
#undef DO_
}

void FloatList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.FloatList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->values().data(), this->values_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.FloatList)
}

::google::protobuf::uint8* FloatList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.FloatList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.FloatList)
  return target;
}

size_t FloatList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.FloatList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FloatList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.FloatList)
  GOOGLE_DCHECK_NE(&from, this);
  const FloatList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FloatList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.FloatList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.FloatList)
    MergeFrom(*source);
  }
}

void FloatList::MergeFrom(const FloatList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.FloatList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void FloatList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.FloatList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FloatList::CopyFrom(const FloatList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.FloatList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatList::IsInitialized() const {
  return true;
}

void FloatList::Swap(FloatList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatList::InternalSwap(FloatList* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FloatList::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Int32List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int32List::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int32List::Int32List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_Int32List.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.Int32List)
}
Int32List::Int32List(const Int32List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.Int32List)
}

void Int32List::SharedCtor() {
}

Int32List::~Int32List() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.Int32List)
  SharedDtor();
}

void Int32List::SharedDtor() {
}

void Int32List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Int32List::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int32List& Int32List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_Int32List.base);
  return *internal_default_instance();
}


void Int32List::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.Int32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Int32List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.Int32List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.Int32List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.Int32List)
  return false;
#undef DO_
}

void Int32List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.Int32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
  }
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.Int32List)
}

::google::protobuf::uint8* Int32List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.Int32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.Int32List)
  return target;
}

size_t Int32List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.Int32List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 values = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->values_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Int32List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.Int32List)
  GOOGLE_DCHECK_NE(&from, this);
  const Int32List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int32List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.Int32List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.Int32List)
    MergeFrom(*source);
  }
}

void Int32List::MergeFrom(const Int32List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.Int32List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Int32List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.Int32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int32List::CopyFrom(const Int32List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.Int32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int32List::IsInitialized() const {
  return true;
}

void Int32List::Swap(Int32List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int32List::InternalSwap(Int32List* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Int32List::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Int64List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64List::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64List::Int64List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_Int64List.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.Int64List)
}
Int64List::Int64List(const Int64List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.Int64List)
}

void Int64List::SharedCtor() {
}

Int64List::~Int64List() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.Int64List)
  SharedDtor();
}

void Int64List::SharedDtor() {
}

void Int64List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Int64List::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int64List& Int64List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_Int64List.base);
  return *internal_default_instance();
}


void Int64List::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.Int64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Int64List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.Int64List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.Int64List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.Int64List)
  return false;
#undef DO_
}

void Int64List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.Int64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
  }
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.Int64List)
}

::google::protobuf::uint8* Int64List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.Int64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.Int64List)
  return target;
}

size_t Int64List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.Int64List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 values = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->values_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Int64List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.Int64List)
  GOOGLE_DCHECK_NE(&from, this);
  const Int64List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int64List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.Int64List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.Int64List)
    MergeFrom(*source);
  }
}

void Int64List::MergeFrom(const Int64List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.Int64List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Int64List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.Int64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int64List::CopyFrom(const Int64List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.Int64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64List::IsInitialized() const {
  return true;
}

void Int64List::Swap(Int64List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int64List::InternalSwap(Int64List* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Int64List::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Uint32List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uint32List::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uint32List::Uint32List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_Uint32List.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.Uint32List)
}
Uint32List::Uint32List(const Uint32List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.Uint32List)
}

void Uint32List::SharedCtor() {
}

Uint32List::~Uint32List() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.Uint32List)
  SharedDtor();
}

void Uint32List::SharedDtor() {
}

void Uint32List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Uint32List::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uint32List& Uint32List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_Uint32List.base);
  return *internal_default_instance();
}


void Uint32List::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.Uint32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Uint32List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.Uint32List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.Uint32List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.Uint32List)
  return false;
#undef DO_
}

void Uint32List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.Uint32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
  }
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.Uint32List)
}

::google::protobuf::uint8* Uint32List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.Uint32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.Uint32List)
  return target;
}

size_t Uint32List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.Uint32List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 values = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->values_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Uint32List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.Uint32List)
  GOOGLE_DCHECK_NE(&from, this);
  const Uint32List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uint32List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.Uint32List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.Uint32List)
    MergeFrom(*source);
  }
}

void Uint32List::MergeFrom(const Uint32List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.Uint32List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Uint32List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.Uint32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint32List::CopyFrom(const Uint32List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.Uint32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint32List::IsInitialized() const {
  return true;
}

void Uint32List::Swap(Uint32List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uint32List::InternalSwap(Uint32List* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Uint32List::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Uint64List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uint64List::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uint64List::Uint64List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_Uint64List.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.Uint64List)
}
Uint64List::Uint64List(const Uint64List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.Uint64List)
}

void Uint64List::SharedCtor() {
}

Uint64List::~Uint64List() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.Uint64List)
  SharedDtor();
}

void Uint64List::SharedDtor() {
}

void Uint64List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Uint64List::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uint64List& Uint64List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_Uint64List.base);
  return *internal_default_instance();
}


void Uint64List::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.Uint64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Uint64List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.Uint64List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.Uint64List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.Uint64List)
  return false;
#undef DO_
}

void Uint64List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.Uint64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
  }
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.Uint64List)
}

::google::protobuf::uint8* Uint64List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.Uint64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.Uint64List)
  return target;
}

size_t Uint64List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.Uint64List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 values = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->values_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Uint64List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.Uint64List)
  GOOGLE_DCHECK_NE(&from, this);
  const Uint64List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uint64List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.Uint64List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.Uint64List)
    MergeFrom(*source);
  }
}

void Uint64List::MergeFrom(const Uint64List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.Uint64List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Uint64List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.Uint64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint64List::CopyFrom(const Uint64List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.Uint64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint64List::IsInitialized() const {
  return true;
}

void Uint64List::Swap(Uint64List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uint64List::InternalSwap(Uint64List* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Uint64List::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Sint32List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Sint32List::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Sint32List::Sint32List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_Sint32List.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.Sint32List)
}
Sint32List::Sint32List(const Sint32List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.Sint32List)
}

void Sint32List::SharedCtor() {
}

Sint32List::~Sint32List() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.Sint32List)
  SharedDtor();
}

void Sint32List::SharedDtor() {
}

void Sint32List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Sint32List::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Sint32List& Sint32List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_Sint32List.base);
  return *internal_default_instance();
}


void Sint32List::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.Sint32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Sint32List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.Sint32List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.Sint32List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.Sint32List)
  return false;
#undef DO_
}

void Sint32List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.Sint32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
  }
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.Sint32List)
}

::google::protobuf::uint8* Sint32List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.Sint32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.Sint32List)
  return target;
}

size_t Sint32List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.Sint32List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 values = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->values_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Sint32List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.Sint32List)
  GOOGLE_DCHECK_NE(&from, this);
  const Sint32List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Sint32List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.Sint32List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.Sint32List)
    MergeFrom(*source);
  }
}

void Sint32List::MergeFrom(const Sint32List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.Sint32List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Sint32List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.Sint32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sint32List::CopyFrom(const Sint32List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.Sint32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sint32List::IsInitialized() const {
  return true;
}

void Sint32List::Swap(Sint32List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Sint32List::InternalSwap(Sint32List* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Sint32List::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Sint64List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Sint64List::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Sint64List::Sint64List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_Sint64List.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.Sint64List)
}
Sint64List::Sint64List(const Sint64List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.Sint64List)
}

void Sint64List::SharedCtor() {
}

Sint64List::~Sint64List() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.Sint64List)
  SharedDtor();
}

void Sint64List::SharedDtor() {
}

void Sint64List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Sint64List::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Sint64List& Sint64List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_Sint64List.base);
  return *internal_default_instance();
}


void Sint64List::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.Sint64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Sint64List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.Sint64List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.Sint64List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.Sint64List)
  return false;
#undef DO_
}

void Sint64List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.Sint64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
  }
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.Sint64List)
}

::google::protobuf::uint8* Sint64List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.Sint64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.Sint64List)
  return target;
}

size_t Sint64List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.Sint64List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 values = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->values_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Sint64List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.Sint64List)
  GOOGLE_DCHECK_NE(&from, this);
  const Sint64List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Sint64List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.Sint64List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.Sint64List)
    MergeFrom(*source);
  }
}

void Sint64List::MergeFrom(const Sint64List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.Sint64List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Sint64List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.Sint64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sint64List::CopyFrom(const Sint64List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.Sint64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sint64List::IsInitialized() const {
  return true;
}

void Sint64List::Swap(Sint64List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Sint64List::InternalSwap(Sint64List* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Sint64List::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Fixed32List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Fixed32List::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Fixed32List::Fixed32List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_Fixed32List.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.Fixed32List)
}
Fixed32List::Fixed32List(const Fixed32List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.Fixed32List)
}

void Fixed32List::SharedCtor() {
}

Fixed32List::~Fixed32List() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.Fixed32List)
  SharedDtor();
}

void Fixed32List::SharedDtor() {
}

void Fixed32List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Fixed32List::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Fixed32List& Fixed32List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_Fixed32List.base);
  return *internal_default_instance();
}


void Fixed32List::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.Fixed32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Fixed32List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.Fixed32List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.Fixed32List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.Fixed32List)
  return false;
#undef DO_
}

void Fixed32List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.Fixed32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->values().data(), this->values_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.Fixed32List)
}

::google::protobuf::uint8* Fixed32List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.Fixed32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.Fixed32List)
  return target;
}

size_t Fixed32List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.Fixed32List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Fixed32List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.Fixed32List)
  GOOGLE_DCHECK_NE(&from, this);
  const Fixed32List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Fixed32List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.Fixed32List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.Fixed32List)
    MergeFrom(*source);
  }
}

void Fixed32List::MergeFrom(const Fixed32List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.Fixed32List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Fixed32List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.Fixed32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Fixed32List::CopyFrom(const Fixed32List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.Fixed32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fixed32List::IsInitialized() const {
  return true;
}

void Fixed32List::Swap(Fixed32List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Fixed32List::InternalSwap(Fixed32List* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Fixed32List::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Fixed64List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Fixed64List::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Fixed64List::Fixed64List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_Fixed64List.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.Fixed64List)
}
Fixed64List::Fixed64List(const Fixed64List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.Fixed64List)
}

void Fixed64List::SharedCtor() {
}

Fixed64List::~Fixed64List() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.Fixed64List)
  SharedDtor();
}

void Fixed64List::SharedDtor() {
}

void Fixed64List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Fixed64List::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Fixed64List& Fixed64List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_Fixed64List.base);
  return *internal_default_instance();
}


void Fixed64List::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.Fixed64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Fixed64List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.Fixed64List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.Fixed64List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.Fixed64List)
  return false;
#undef DO_
}

void Fixed64List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.Fixed64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->values().data(), this->values_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.Fixed64List)
}

::google::protobuf::uint8* Fixed64List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.Fixed64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.Fixed64List)
  return target;
}

size_t Fixed64List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.Fixed64List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Fixed64List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.Fixed64List)
  GOOGLE_DCHECK_NE(&from, this);
  const Fixed64List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Fixed64List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.Fixed64List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.Fixed64List)
    MergeFrom(*source);
  }
}

void Fixed64List::MergeFrom(const Fixed64List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.Fixed64List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Fixed64List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.Fixed64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Fixed64List::CopyFrom(const Fixed64List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.Fixed64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fixed64List::IsInitialized() const {
  return true;
}

void Fixed64List::Swap(Fixed64List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Fixed64List::InternalSwap(Fixed64List* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Fixed64List::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Sfixed32List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Sfixed32List::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Sfixed32List::Sfixed32List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_Sfixed32List.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.Sfixed32List)
}
Sfixed32List::Sfixed32List(const Sfixed32List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.Sfixed32List)
}

void Sfixed32List::SharedCtor() {
}

Sfixed32List::~Sfixed32List() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.Sfixed32List)
  SharedDtor();
}

void Sfixed32List::SharedDtor() {
}

void Sfixed32List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Sfixed32List::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Sfixed32List& Sfixed32List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_Sfixed32List.base);
  return *internal_default_instance();
}


void Sfixed32List::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.Sfixed32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Sfixed32List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.Sfixed32List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.Sfixed32List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.Sfixed32List)
  return false;
#undef DO_
}

void Sfixed32List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.Sfixed32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->values().data(), this->values_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.Sfixed32List)
}

::google::protobuf::uint8* Sfixed32List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.Sfixed32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.Sfixed32List)
  return target;
}

size_t Sfixed32List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.Sfixed32List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Sfixed32List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.Sfixed32List)
  GOOGLE_DCHECK_NE(&from, this);
  const Sfixed32List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Sfixed32List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.Sfixed32List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.Sfixed32List)
    MergeFrom(*source);
  }
}

void Sfixed32List::MergeFrom(const Sfixed32List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.Sfixed32List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Sfixed32List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.Sfixed32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sfixed32List::CopyFrom(const Sfixed32List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.Sfixed32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sfixed32List::IsInitialized() const {
  return true;
}

void Sfixed32List::Swap(Sfixed32List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Sfixed32List::InternalSwap(Sfixed32List* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Sfixed32List::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Sfixed64List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Sfixed64List::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Sfixed64List::Sfixed64List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_Sfixed64List.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.Sfixed64List)
}
Sfixed64List::Sfixed64List(const Sfixed64List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.Sfixed64List)
}

void Sfixed64List::SharedCtor() {
}

Sfixed64List::~Sfixed64List() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.Sfixed64List)
  SharedDtor();
}

void Sfixed64List::SharedDtor() {
}

void Sfixed64List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Sfixed64List::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Sfixed64List& Sfixed64List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_Sfixed64List.base);
  return *internal_default_instance();
}


void Sfixed64List::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.Sfixed64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Sfixed64List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.Sfixed64List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.Sfixed64List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.Sfixed64List)
  return false;
#undef DO_
}

void Sfixed64List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.Sfixed64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->values().data(), this->values_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.Sfixed64List)
}

::google::protobuf::uint8* Sfixed64List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.Sfixed64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.Sfixed64List)
  return target;
}

size_t Sfixed64List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.Sfixed64List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Sfixed64List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.Sfixed64List)
  GOOGLE_DCHECK_NE(&from, this);
  const Sfixed64List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Sfixed64List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.Sfixed64List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.Sfixed64List)
    MergeFrom(*source);
  }
}

void Sfixed64List::MergeFrom(const Sfixed64List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.Sfixed64List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Sfixed64List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.Sfixed64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sfixed64List::CopyFrom(const Sfixed64List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.Sfixed64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sfixed64List::IsInitialized() const {
  return true;
}

void Sfixed64List::Swap(Sfixed64List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Sfixed64List::InternalSwap(Sfixed64List* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Sfixed64List::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BoolList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoolList::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoolList::BoolList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_BoolList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.BoolList)
}
BoolList::BoolList(const BoolList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.BoolList)
}

void BoolList::SharedCtor() {
}

BoolList::~BoolList() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.BoolList)
  SharedDtor();
}

void BoolList::SharedDtor() {
}

void BoolList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BoolList::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BoolList& BoolList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_BoolList.base);
  return *internal_default_instance();
}


void BoolList::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.BoolList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool BoolList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.BoolList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.BoolList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.BoolList)
  return false;
#undef DO_
}

void BoolList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.BoolList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool values = 1;
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _values_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->values().data(), this->values_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.BoolList)
}

::google::protobuf::uint8* BoolList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.BoolList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool values = 1;
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.BoolList)
  return target;
}

size_t BoolList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.BoolList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BoolList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.BoolList)
  GOOGLE_DCHECK_NE(&from, this);
  const BoolList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoolList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.BoolList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.BoolList)
    MergeFrom(*source);
  }
}

void BoolList::MergeFrom(const BoolList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.BoolList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void BoolList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.BoolList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoolList::CopyFrom(const BoolList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.BoolList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoolList::IsInitialized() const {
  return true;
}

void BoolList::Swap(BoolList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoolList::InternalSwap(BoolList* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BoolList::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StringList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringList::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringList::StringList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_StringList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.StringList)
}
StringList::StringList(const StringList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.StringList)
}

void StringList::SharedCtor() {
}

StringList::~StringList() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.StringList)
  SharedDtor();
}

void StringList::SharedDtor() {
}

void StringList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StringList::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringList& StringList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_StringList.base);
  return *internal_default_instance();
}


void StringList::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.StringList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool StringList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.StringList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->values(this->values_size() - 1).data(),
            static_cast<int>(this->values(this->values_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChakraProtoMsg.StringList.values"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.StringList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.StringList)
  return false;
#undef DO_
}

void StringList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.StringList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string values = 1;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.StringList.values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.StringList)
}

::google::protobuf::uint8* StringList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.StringList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string values = 1;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.StringList.values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->values(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.StringList)
  return target;
}

size_t StringList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.StringList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string values = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->values(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.StringList)
  GOOGLE_DCHECK_NE(&from, this);
  const StringList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.StringList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.StringList)
    MergeFrom(*source);
  }
}

void StringList::MergeFrom(const StringList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.StringList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void StringList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.StringList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringList::CopyFrom(const StringList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.StringList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringList::IsInitialized() const {
  return true;
}

void StringList::Swap(StringList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringList::InternalSwap(StringList* other) {
  using std::swap;
  values_.InternalSwap(CastToBase(&other->values_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StringList::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytesList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytesList::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytesList::BytesList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_BytesList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.BytesList)
}
BytesList::BytesList(const BytesList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.BytesList)
}

void BytesList::SharedCtor() {
}

BytesList::~BytesList() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.BytesList)
  SharedDtor();
}

void BytesList::SharedDtor() {
}

void BytesList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytesList::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytesList& BytesList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_BytesList.base);
  return *internal_default_instance();
}


void BytesList::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.BytesList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool BytesList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.BytesList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.BytesList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.BytesList)
  return false;
#undef DO_
}

void BytesList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.BytesList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes values = 1;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.BytesList)
}

::google::protobuf::uint8* BytesList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.BytesList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes values = 1;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->values(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.BytesList)
  return target;
}

size_t BytesList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.BytesList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes values = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->values(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytesList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.BytesList)
  GOOGLE_DCHECK_NE(&from, this);
  const BytesList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytesList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.BytesList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.BytesList)
    MergeFrom(*source);
  }
}

void BytesList::MergeFrom(const BytesList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.BytesList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void BytesList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.BytesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytesList::CopyFrom(const BytesList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.BytesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytesList::IsInitialized() const {
  return true;
}

void BytesList::Swap(BytesList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytesList::InternalSwap(BytesList* other) {
  using std::swap;
  values_.InternalSwap(CastToBase(&other->values_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytesList::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GlobalMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GlobalMetadata::kVersionFieldNumber;
const int GlobalMetadata::kAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GlobalMetadata::GlobalMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_GlobalMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.GlobalMetadata)
}
GlobalMetadata::GlobalMetadata(const GlobalMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      attr_(from.attr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.GlobalMetadata)
}

void GlobalMetadata::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GlobalMetadata::~GlobalMetadata() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.GlobalMetadata)
  SharedDtor();
}

void GlobalMetadata::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GlobalMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GlobalMetadata::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GlobalMetadata& GlobalMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_GlobalMetadata.base);
  return *internal_default_instance();
}


void GlobalMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.GlobalMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attr_.Clear();
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GlobalMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.GlobalMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChakraProtoMsg.GlobalMetadata.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ChakraProtoMsg.AttributeProto attr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.GlobalMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.GlobalMetadata)
  return false;
#undef DO_
}

void GlobalMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.GlobalMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.GlobalMetadata.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // repeated .ChakraProtoMsg.AttributeProto attr = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->attr(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.GlobalMetadata)
}

::google::protobuf::uint8* GlobalMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.GlobalMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.GlobalMetadata.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // repeated .ChakraProtoMsg.AttributeProto attr = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->attr(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.GlobalMetadata)
  return target;
}

size_t GlobalMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.GlobalMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ChakraProtoMsg.AttributeProto attr = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->attr_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attr(static_cast<int>(i)));
    }
  }

  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GlobalMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.GlobalMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GlobalMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.GlobalMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.GlobalMetadata)
    MergeFrom(*source);
  }
}

void GlobalMetadata::MergeFrom(const GlobalMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.GlobalMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attr_.MergeFrom(from.attr_);
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void GlobalMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.GlobalMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalMetadata::CopyFrom(const GlobalMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.GlobalMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalMetadata::IsInitialized() const {
  return true;
}

void GlobalMetadata::Swap(GlobalMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GlobalMetadata::InternalSwap(GlobalMetadata* other) {
  using std::swap;
  CastToBase(&attr_)->InternalSwap(CastToBase(&other->attr_));
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GlobalMetadata::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Node::InitAsDefaultInstance() {
  ::ChakraProtoMsg::_Node_default_instance_._instance.get_mutable()->inputs_ = const_cast< ::ChakraProtoMsg::IOInfo*>(
      ::ChakraProtoMsg::IOInfo::internal_default_instance());
  ::ChakraProtoMsg::_Node_default_instance_._instance.get_mutable()->outputs_ = const_cast< ::ChakraProtoMsg::IOInfo*>(
      ::ChakraProtoMsg::IOInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Node::kIdFieldNumber;
const int Node::kNameFieldNumber;
const int Node::kTypeFieldNumber;
const int Node::kCtrlDepsFieldNumber;
const int Node::kDataDepsFieldNumber;
const int Node::kStartTimeMicrosFieldNumber;
const int Node::kDurationMicrosFieldNumber;
const int Node::kInputsFieldNumber;
const int Node::kOutputsFieldNumber;
const int Node::kAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Node::Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_Node.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.Node)
}
Node::Node(const Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ctrl_deps_(from.ctrl_deps_),
      data_deps_(from.data_deps_),
      attr_(from.attr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_inputs()) {
    inputs_ = new ::ChakraProtoMsg::IOInfo(*from.inputs_);
  } else {
    inputs_ = NULL;
  }
  if (from.has_outputs()) {
    outputs_ = new ::ChakraProtoMsg::IOInfo(*from.outputs_);
  } else {
    outputs_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.Node)
}

void Node::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inputs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&inputs_)) + sizeof(type_));
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.Node)
  SharedDtor();
}

void Node::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete inputs_;
  if (this != internal_default_instance()) delete outputs_;
}

void Node::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Node::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Node& Node::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_Node.base);
  return *internal_default_instance();
}


void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ctrl_deps_.Clear();
  data_deps_.Clear();
  attr_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && inputs_ != NULL) {
    delete inputs_;
  }
  inputs_ = NULL;
  if (GetArenaNoVirtual() == NULL && outputs_ != NULL) {
    delete outputs_;
  }
  outputs_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.Node)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChakraProtoMsg.Node.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.NodeType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ChakraProtoMsg::NodeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 ctrl_deps = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_ctrl_deps())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_ctrl_deps())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 data_deps = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_data_deps())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 42u, input, this->mutable_data_deps())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_time_micros = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_time_micros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 duration_micros = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &duration_micros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.IOInfo inputs = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ChakraProtoMsg.IOInfo outputs = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ChakraProtoMsg.AttributeProto attr = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.Node)
  return false;
#undef DO_
}

void Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.Node.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .ChakraProtoMsg.NodeType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // repeated uint64 ctrl_deps = 4;
  if (this->ctrl_deps_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _ctrl_deps_cached_byte_size_));
  }
  for (int i = 0, n = this->ctrl_deps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->ctrl_deps(i), output);
  }

  // repeated uint64 data_deps = 5;
  if (this->data_deps_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _data_deps_cached_byte_size_));
  }
  for (int i = 0, n = this->data_deps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->data_deps(i), output);
  }

  // uint64 start_time_micros = 6;
  if (this->start_time_micros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->start_time_micros(), output);
  }

  // uint64 duration_micros = 7;
  if (this->duration_micros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->duration_micros(), output);
  }

  // .ChakraProtoMsg.IOInfo inputs = 8;
  if (this->has_inputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_inputs(), output);
  }

  // .ChakraProtoMsg.IOInfo outputs = 9;
  if (this->has_outputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_outputs(), output);
  }

  // repeated .ChakraProtoMsg.AttributeProto attr = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->attr(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.Node)
}

::google::protobuf::uint8* Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.Node.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .ChakraProtoMsg.NodeType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // repeated uint64 ctrl_deps = 4;
  if (this->ctrl_deps_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _ctrl_deps_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->ctrl_deps_, target);
  }

  // repeated uint64 data_deps = 5;
  if (this->data_deps_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _data_deps_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->data_deps_, target);
  }

  // uint64 start_time_micros = 6;
  if (this->start_time_micros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->start_time_micros(), target);
  }

  // uint64 duration_micros = 7;
  if (this->duration_micros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->duration_micros(), target);
  }

  // .ChakraProtoMsg.IOInfo inputs = 8;
  if (this->has_inputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_inputs(), deterministic, target);
  }

  // .ChakraProtoMsg.IOInfo outputs = 9;
  if (this->has_outputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_outputs(), deterministic, target);
  }

  // repeated .ChakraProtoMsg.AttributeProto attr = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->attr(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.Node)
  return target;
}

size_t Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.Node)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 ctrl_deps = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->ctrl_deps_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ctrl_deps_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 data_deps = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->data_deps_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_deps_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .ChakraProtoMsg.AttributeProto attr = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->attr_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attr(static_cast<int>(i)));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .ChakraProtoMsg.IOInfo inputs = 8;
  if (this->has_inputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inputs_);
  }

  // .ChakraProtoMsg.IOInfo outputs = 9;
  if (this->has_outputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *outputs_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 start_time_micros = 6;
  if (this->start_time_micros() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_time_micros());
  }

  // uint64 duration_micros = 7;
  if (this->duration_micros() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->duration_micros());
  }

  // .ChakraProtoMsg.NodeType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const Node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.Node)
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ctrl_deps_.MergeFrom(from.ctrl_deps_);
  data_deps_.MergeFrom(from.data_deps_);
  attr_.MergeFrom(from.attr_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_inputs()) {
    mutable_inputs()->::ChakraProtoMsg::IOInfo::MergeFrom(from.inputs());
  }
  if (from.has_outputs()) {
    mutable_outputs()->::ChakraProtoMsg::IOInfo::MergeFrom(from.outputs());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.start_time_micros() != 0) {
    set_start_time_micros(from.start_time_micros());
  }
  if (from.duration_micros() != 0) {
    set_duration_micros(from.duration_micros());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {
  return true;
}

void Node::Swap(Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Node::InternalSwap(Node* other) {
  using std::swap;
  ctrl_deps_.InternalSwap(&other->ctrl_deps_);
  data_deps_.InternalSwap(&other->data_deps_);
  CastToBase(&attr_)->InternalSwap(CastToBase(&other->attr_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(inputs_, other->inputs_);
  swap(outputs_, other->outputs_);
  swap(id_, other->id_);
  swap(start_time_micros_, other->start_time_micros_);
  swap(duration_micros_, other->duration_micros_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IOInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IOInfo::kValuesFieldNumber;
const int IOInfo::kShapesFieldNumber;
const int IOInfo::kTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IOInfo::IOInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_IOInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.IOInfo)
}
IOInfo::IOInfo(const IOInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  values_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.values().size() > 0) {
    values_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.values_);
  }
  shapes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shapes().size() > 0) {
    shapes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shapes_);
  }
  types_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.types().size() > 0) {
    types_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.types_);
  }
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.IOInfo)
}

void IOInfo::SharedCtor() {
  values_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shapes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  types_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IOInfo::~IOInfo() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.IOInfo)
  SharedDtor();
}

void IOInfo::SharedDtor() {
  values_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shapes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  types_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IOInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IOInfo::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IOInfo& IOInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_IOInfo.base);
  return *internal_default_instance();
}


void IOInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.IOInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shapes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  types_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool IOInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.IOInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->values().data(), static_cast<int>(this->values().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChakraProtoMsg.IOInfo.values"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shapes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shapes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shapes().data(), static_cast<int>(this->shapes().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChakraProtoMsg.IOInfo.shapes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string types = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_types()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->types().data(), static_cast<int>(this->types().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChakraProtoMsg.IOInfo.types"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.IOInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.IOInfo)
  return false;
#undef DO_
}

void IOInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.IOInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string values = 1;
  if (this->values().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values().data(), static_cast<int>(this->values().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.IOInfo.values");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->values(), output);
  }

  // string shapes = 2;
  if (this->shapes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shapes().data(), static_cast<int>(this->shapes().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.IOInfo.shapes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->shapes(), output);
  }

  // string types = 3;
  if (this->types().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->types().data(), static_cast<int>(this->types().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.IOInfo.types");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->types(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.IOInfo)
}

::google::protobuf::uint8* IOInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.IOInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string values = 1;
  if (this->values().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values().data(), static_cast<int>(this->values().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.IOInfo.values");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->values(), target);
  }

  // string shapes = 2;
  if (this->shapes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shapes().data(), static_cast<int>(this->shapes().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.IOInfo.shapes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->shapes(), target);
  }

  // string types = 3;
  if (this->types().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->types().data(), static_cast<int>(this->types().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.IOInfo.types");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->types(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.IOInfo)
  return target;
}

size_t IOInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.IOInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string values = 1;
  if (this->values().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->values());
  }

  // string shapes = 2;
  if (this->shapes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shapes());
  }

  // string types = 3;
  if (this->types().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->types());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IOInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.IOInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const IOInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IOInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.IOInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.IOInfo)
    MergeFrom(*source);
  }
}

void IOInfo::MergeFrom(const IOInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.IOInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.values().size() > 0) {

    values_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.values_);
  }
  if (from.shapes().size() > 0) {

    shapes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shapes_);
  }
  if (from.types().size() > 0) {

    types_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.types_);
  }
}

void IOInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.IOInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IOInfo::CopyFrom(const IOInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.IOInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IOInfo::IsInitialized() const {
  return true;
}

void IOInfo::Swap(IOInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IOInfo::InternalSwap(IOInfo* other) {
  using std::swap;
  values_.Swap(&other->values_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shapes_.Swap(&other->shapes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  types_.Swap(&other->types_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IOInfo::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Tensor::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tensor::kTensorIdFieldNumber;
const int Tensor::kStorageIdFieldNumber;
const int Tensor::kOffsetFieldNumber;
const int Tensor::kNumElemFieldNumber;
const int Tensor::kElemBytesFieldNumber;
const int Tensor::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tensor::Tensor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_et_5fdef_2eproto::scc_info_Tensor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChakraProtoMsg.Tensor)
}
Tensor::Tensor(const Tensor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device().size() > 0) {
    device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
  ::memcpy(&tensor_id_, &from.tensor_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&elem_bytes_) -
    reinterpret_cast<char*>(&tensor_id_)) + sizeof(elem_bytes_));
  // @@protoc_insertion_point(copy_constructor:ChakraProtoMsg.Tensor)
}

void Tensor::SharedCtor() {
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tensor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elem_bytes_) -
      reinterpret_cast<char*>(&tensor_id_)) + sizeof(elem_bytes_));
}

Tensor::~Tensor() {
  // @@protoc_insertion_point(destructor:ChakraProtoMsg.Tensor)
  SharedDtor();
}

void Tensor::SharedDtor() {
  device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Tensor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Tensor::descriptor() {
  ::protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tensor& Tensor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_et_5fdef_2eproto::scc_info_Tensor.base);
  return *internal_default_instance();
}


void Tensor::Clear() {
// @@protoc_insertion_point(message_clear_start:ChakraProtoMsg.Tensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tensor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elem_bytes_) -
      reinterpret_cast<char*>(&tensor_id_)) + sizeof(elem_bytes_));
  _internal_metadata_.Clear();
}

bool Tensor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChakraProtoMsg.Tensor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 tensor_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tensor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 storage_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &storage_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 num_elem = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_elem_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 elem_bytes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &elem_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device().data(), static_cast<int>(this->device().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChakraProtoMsg.Tensor.device"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChakraProtoMsg.Tensor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChakraProtoMsg.Tensor)
  return false;
#undef DO_
}

void Tensor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChakraProtoMsg.Tensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 tensor_id = 1;
  if (this->tensor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->tensor_id(), output);
  }

  // uint64 storage_id = 2;
  if (this->storage_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->storage_id(), output);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  // uint64 num_elem = 4;
  if (this->num_elem() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->num_elem(), output);
  }

  // uint64 elem_bytes = 5;
  if (this->elem_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->elem_bytes(), output);
  }

  // string device = 6;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.Tensor.device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->device(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChakraProtoMsg.Tensor)
}

::google::protobuf::uint8* Tensor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChakraProtoMsg.Tensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 tensor_id = 1;
  if (this->tensor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->tensor_id(), target);
  }

  // uint64 storage_id = 2;
  if (this->storage_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->storage_id(), target);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  // uint64 num_elem = 4;
  if (this->num_elem() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->num_elem(), target);
  }

  // uint64 elem_bytes = 5;
  if (this->elem_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->elem_bytes(), target);
  }

  // string device = 6;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChakraProtoMsg.Tensor.device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->device(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChakraProtoMsg.Tensor)
  return target;
}

size_t Tensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChakraProtoMsg.Tensor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string device = 6;
  if (this->device().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device());
  }

  // uint64 tensor_id = 1;
  if (this->tensor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tensor_id());
  }

  // uint64 storage_id = 2;
  if (this->storage_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->storage_id());
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  // uint64 num_elem = 4;
  if (this->num_elem() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_elem());
  }

  // uint64 elem_bytes = 5;
  if (this->elem_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->elem_bytes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tensor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChakraProtoMsg.Tensor)
  GOOGLE_DCHECK_NE(&from, this);
  const Tensor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tensor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChakraProtoMsg.Tensor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChakraProtoMsg.Tensor)
    MergeFrom(*source);
  }
}

void Tensor::MergeFrom(const Tensor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChakraProtoMsg.Tensor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device().size() > 0) {

    device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
  if (from.tensor_id() != 0) {
    set_tensor_id(from.tensor_id());
  }
  if (from.storage_id() != 0) {
    set_storage_id(from.storage_id());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.num_elem() != 0) {
    set_num_elem(from.num_elem());
  }
  if (from.elem_bytes() != 0) {
    set_elem_bytes(from.elem_bytes());
  }
}

void Tensor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChakraProtoMsg.Tensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tensor::CopyFrom(const Tensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChakraProtoMsg.Tensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tensor::IsInitialized() const {
  return true;
}

void Tensor::Swap(Tensor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tensor::InternalSwap(Tensor* other) {
  using std::swap;
  device_.Swap(&other->device_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tensor_id_, other->tensor_id_);
  swap(storage_id_, other->storage_id_);
  swap(offset_, other->offset_);
  swap(num_elem_, other->num_elem_);
  swap(elem_bytes_, other->elem_bytes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Tensor::GetMetadata() const {
  protobuf_et_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_et_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ChakraProtoMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::AttributeProto* Arena::CreateMaybeMessage< ::ChakraProtoMsg::AttributeProto >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::AttributeProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::DoubleList* Arena::CreateMaybeMessage< ::ChakraProtoMsg::DoubleList >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::DoubleList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::FloatList* Arena::CreateMaybeMessage< ::ChakraProtoMsg::FloatList >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::FloatList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::Int32List* Arena::CreateMaybeMessage< ::ChakraProtoMsg::Int32List >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::Int32List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::Int64List* Arena::CreateMaybeMessage< ::ChakraProtoMsg::Int64List >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::Int64List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::Uint32List* Arena::CreateMaybeMessage< ::ChakraProtoMsg::Uint32List >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::Uint32List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::Uint64List* Arena::CreateMaybeMessage< ::ChakraProtoMsg::Uint64List >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::Uint64List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::Sint32List* Arena::CreateMaybeMessage< ::ChakraProtoMsg::Sint32List >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::Sint32List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::Sint64List* Arena::CreateMaybeMessage< ::ChakraProtoMsg::Sint64List >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::Sint64List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::Fixed32List* Arena::CreateMaybeMessage< ::ChakraProtoMsg::Fixed32List >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::Fixed32List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::Fixed64List* Arena::CreateMaybeMessage< ::ChakraProtoMsg::Fixed64List >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::Fixed64List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::Sfixed32List* Arena::CreateMaybeMessage< ::ChakraProtoMsg::Sfixed32List >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::Sfixed32List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::Sfixed64List* Arena::CreateMaybeMessage< ::ChakraProtoMsg::Sfixed64List >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::Sfixed64List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::BoolList* Arena::CreateMaybeMessage< ::ChakraProtoMsg::BoolList >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::BoolList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::StringList* Arena::CreateMaybeMessage< ::ChakraProtoMsg::StringList >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::StringList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::BytesList* Arena::CreateMaybeMessage< ::ChakraProtoMsg::BytesList >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::BytesList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::GlobalMetadata* Arena::CreateMaybeMessage< ::ChakraProtoMsg::GlobalMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::GlobalMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::Node* Arena::CreateMaybeMessage< ::ChakraProtoMsg::Node >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::Node >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::IOInfo* Arena::CreateMaybeMessage< ::ChakraProtoMsg::IOInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::IOInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChakraProtoMsg::Tensor* Arena::CreateMaybeMessage< ::ChakraProtoMsg::Tensor >(Arena* arena) {
  return Arena::CreateInternal< ::ChakraProtoMsg::Tensor >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
